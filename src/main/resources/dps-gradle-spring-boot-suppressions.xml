<?xml version="1.0" encoding="UTF-8"?>

<!-- WARNING - THIS FILE WAS GENERATED BY THE dps-gradle-spring-boot GRADLE PLUGIN AND ANY MANUAL CHANGES WILL BE OVERRIDDEN ON YOUR NEXT BUILD -->
<!-- To make changes to the suppressions below, change the gradle plugin dps-gradle-spring-boot, publish a new version and update to the new version in your gradle build script -->

<suppressions xmlns="https://jeremylong.github.io/DependencyCheck/dependency-suppression.1.3.xsd">
  <!-- suppressed as we don't run in production with h2 -->
  <suppress>
    <notes><![CDATA[
   file name: h2-2.1.212.jar
   ]]></notes>
    <packageUrl regex="true">^pkg:maven/com\.h2database/h2@.*$</packageUrl>
    <vulnerabilityName>CVE-2018-14335</vulnerabilityName>
  </suppress>
  <!-- suppressed as we don't run in production with h2 -->
  <suppress>
    <notes><![CDATA[
   file name: h2-2.1.212.jar
   ]]></notes>
    <packageUrl regex="true">^pkg:maven/com\.h2database/h2@.*$</packageUrl>
    <vulnerabilityName>[sonatype-2020-1324] CWE-94: Improper Control of Generation of Code ('Code Injection')
    </vulnerabilityName>
  </suppress>
  <!-- suppressed as we don't run in production with h2 -->
  <suppress>
    <notes><![CDATA[
   file name: h2-2.1.214.jar
   ]]></notes>
    <packageUrl regex="true">^pkg:maven/com\.h2database/h2@.*$</packageUrl>
    <cve>CVE-2022-45868</cve>
  </suppress>
  <suppress>
    <notes><![CDATA[
     Suppression for checkstyle vulnerability that's being reported for ktlint library.
     file name: ktlint-cli-reporter-checkstyle-1.0.1.jar
   ]]></notes>
    <packageUrl regex="true">^pkg:maven/com\.pinterest\.ktlint/ktlint\-cli\-reporter\-checkstyle@.*$</packageUrl>
    <cve>CVE-2019-10782</cve>
  </suppress>
  <suppress>
    <notes><![CDATA[
     Suppression for checkstyle vulnerability that's being reported for ktlint library.
     file name: ktlint-cli-reporter-checkstyle-1.0.1.jar
   ]]></notes>
    <packageUrl regex="true">^pkg:maven/com\.pinterest\.ktlint/ktlint\-cli\-reporter\-checkstyle@.*$</packageUrl>
    <cve>CVE-2019-9658</cve>
  </suppress>
  <suppress>
    <notes><![CDATA[
    Suppress as we haven't configured spring to handle JWEs.  We don't encrypt our JWT, as they don't contain
    sensitive data so they are plain JWS instead. If we did choose to encrypt then we wouldn't use a symmetric
    algorithms like PBKDF2 since HMPPS Auth would be the only one needing to encrypt.
    file name: nimbus-jose-jwt-9.24.4.jar
   ]]></notes>
    <packageUrl regex="true">^pkg:maven/com\.nimbusds/nimbus\-jose\-jwt@.*$</packageUrl>
    <vulnerabilityName>CVE-2023-52428</vulnerabilityName>
  </suppress>
  <suppress>
    <notes><![CDATA[
    False positive against spring boot, when affects Rust cache projects from 2020.
   file name: spring-boot-starter-cache-3.3.0-sources.jar
   ]]></notes>
    <packageUrl regex="true">^pkg:maven/org\.springframework\.boot/spring\-boot\-starter\-cache@.*$</packageUrl>
    <cve>CVE-2020-36448</cve>
  </suppress>
  <suppress>
    <notes><![CDATA[
    Suppressed as attacher needs to have write access to the configuration or be able to manipulate environment variables
   file name: logback-core-1.5.12.jar
   ]]></notes>
    <packageUrl regex="true">^pkg:maven/ch\.qos\.logback/logback\-core@.*$</packageUrl>
    <vulnerabilityName>CVE-2024-12798</vulnerabilityName>
  </suppress>
  <suppress>
    <notes><![CDATA[
    Suppressed as attacher needs to have write access to the configuration or be able to manipulate environment variables
   file name: logback-core-1.5.12.jar
   ]]></notes>
    <packageUrl regex="true">^pkg:maven/ch\.qos\.logback/logback\-core@.*$</packageUrl>
    <vulnerabilityName>CVE-2024-12801</vulnerabilityName>
  </suppress>
</suppressions>
